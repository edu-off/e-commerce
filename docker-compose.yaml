services:
  ms-cliente:
    container_name: ms-cliente
    ports:
      - 8081:8081
    expose:
      - 8081
    depends_on:
      db-cliente:
        condition: service_healthy
    build:
      context: .
      dockerfile: ./ms-cliente/Dockerfile
    environment:
      - DATABASE_URL_CONNECTION=jdbc:mysql://db-cliente:3301/db-cliente
      - DATABASE_USER=user
      - DATABASE_PASSWORD=pass

  db-cliente:
    container_name: db-cliente
    image: mysql:latest
    restart: always
    ports:
      - 3301:3301
    volumes:
      - db-cliente-volume:/var/lib/mysql
      - ./ms-cliente/migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - MYSQL_DATABASE=db-cliente
      - MYSQL_ROOT_PASSWORD=root-pass
      - MYSQL_USER=user
      - MYSQL_PASSWORD=pass
      - MYSQL_TCP_PORT=3301
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 55

  ms-produto:
    container_name: ms-produto
    ports:
      - 8082:8082
    expose:
      - 8082
    depends_on:
      db-produto:
        condition: service_healthy
    build:
      context: .
      dockerfile: ./ms-produto/Dockerfile
    environment:
      - DATABASE_URL_CONNECTION=jdbc:mysql://db-produto:3302/db-produto
      - DATABASE_USER=user
      - DATABASE_PASSWORD=pass

  db-produto:
    container_name: db-produto
    image: mysql:latest
    restart: always
    ports:
      - 3302:3302
    volumes:
      - db-produto-volume:/var/lib/mysql
      - ./ms-produto/migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - MYSQL_DATABASE=db-produto
      - MYSQL_ROOT_PASSWORD=root-pass
      - MYSQL_USER=user
      - MYSQL_PASSWORD=pass
      - MYSQL_TCP_PORT=3302
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 55

  ms-pedido:
    container_name: ms-pedido
    ports:
      - 8083:8083
    expose:
      - 8083
    depends_on:
      db-pedido:
        condition: service_healthy
    build:
      context: .
      dockerfile: ./ms-pedido/Dockerfile
    environment:
      - DATABASE_URL_CONNECTION=jdbc:mysql://db-pedido:3303/db-pedido
      - DATABASE_USER=user
      - DATABASE_PASSWORD=pass
      - CLIENTE_URL=http://ms-cliente:8081/
      - PRODUTO_URL=http://ms-produto:8082/
      - ENTREGA_URL=http://ms-logistica:8084/

  db-pedido:
    container_name: db-pedido
    image: mysql:latest
    restart: always
    ports:
      - 3303:3303
    volumes:
      - db-pedido-volume:/var/lib/mysql
      - ./ms-pedido/migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - MYSQL_DATABASE=db-pedido
      - MYSQL_ROOT_PASSWORD=root-pass
      - MYSQL_USER=user
      - MYSQL_PASSWORD=pass
      - MYSQL_TCP_PORT=3303
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 55

  ms-logistica:
    container_name: ms-logistica
    ports:
      - 8084:8084
    expose:
      - 8084
    depends_on:
      db-logistica:
        condition: service_healthy
    build:
      context: .
      dockerfile: ./ms-logistica/Dockerfile
    environment:
      - DATABASE_URL_CONNECTION=jdbc:mysql://db-logistica:3304/db-logistica
      - DATABASE_USER=user
      - DATABASE_PASSWORD=pass
      - CLIENTE_URL=http://ms-cliente:8081/
      - PEDIDO_URL=http://ms-pedido:8083/

  db-logistica:
    container_name: db-logistica
    image: mysql:latest
    restart: always
    ports:
      - 3304:3304
    volumes:
      - db-logistica-volume:/var/lib/mysql
      - ./ms-logistica/migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - MYSQL_DATABASE=db-logistica
      - MYSQL_ROOT_PASSWORD=root-pass
      - MYSQL_USER=user
      - MYSQL_PASSWORD=pass
      - MYSQL_TCP_PORT=3304
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 55

volumes:
  db-cliente-volume:
    driver: local
  db-produto-volume:
    driver: local
  db-pedido-volume:
    driver: local
  db-logistica-volume:
    driver: local
